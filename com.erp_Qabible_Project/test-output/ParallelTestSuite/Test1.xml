<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-6EN26E1" failures="0" tests="7" name="Test1" time="30.533" errors="0" timestamp="2025-07-16T15:07:43 IST">
  <testcase classname="BaseClass.BaseClass" name="@BeforeMethod beforeMethod" time="0.004">
    <failure type="java.lang.IllegalArgumentException" message="invalid browser  Firefox">
      <![CDATA[java.lang.IllegalArgumentException: invalid browser  Firefox
at BaseClass.BaseClass.beforeMethod(BaseClass.java:43)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
... Removed 21 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="BaseClass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="BaseClass.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="BaseClass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="BaseClass.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="BaseClass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="BaseClass.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="BaseClass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="BaseClass.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="BaseClass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="BaseClass.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="BaseClass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="BaseClass.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="BaseClass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="TestClass.LoginTestClass" name="verifySuccessfullLogin" time="6.689"/>
  <testcase classname="TestClass.LoginTestClass" name="verifyUnsuccessfullLogin" time="0.716"/>
  <testcase classname="TestClass.LoginTestClass" name="verifyUnsuccessfullLogin" time="0.749"/>
  <testcase classname="TestClass.LoginTestClass" name="verifyUnsuccessfullLogin" time="0.709"/>
  <testcase classname="TestClass.LoginTestClass" name="verifytheCurrentApplicationisloginWhileHitting" time="0.05"/>
  <testcase classname="TestClass.LoginTestClass" name="varifyRemembermeisCheckedOrnot" time="0.068"/>
  <testcase classname="TestClass.LoginTestClass" name="verifyAttributOfUsernameField" time="0.066"/>
</testsuite> <!-- Test1 -->
