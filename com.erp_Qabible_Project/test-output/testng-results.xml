<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="14" passed="7" failed="0" skipped="7">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-07-16T15:07:12 IST" name="ParallelTestSuite" finished-at="2025-07-16T15:07:43 IST" duration-ms="30533">
    <groups>
      <group name="Group2">
        <method signature="LoginTestClass.verifyAttributOfUsernameField()[pri:5, instance:TestClass.LoginTestClass@662ac478]" name="verifyAttributOfUsernameField" class="TestClass.LoginTestClass"/>
        <method signature="LoginTestClass.verifyAttributOfUsernameField()[pri:5, instance:TestClass.LoginTestClass@2de23121]" name="verifyAttributOfUsernameField" class="TestClass.LoginTestClass"/>
      </group> <!-- Group2 -->
      <group name="Group 1">
        <method signature="LoginTestClass.verifySuccessfullLogin()[pri:1, instance:TestClass.LoginTestClass@662ac478]" name="verifySuccessfullLogin" class="TestClass.LoginTestClass"/>
        <method signature="LoginTestClass.verifytheCurrentApplicationisloginWhileHitting()[pri:3, instance:TestClass.LoginTestClass@662ac478]" name="verifytheCurrentApplicationisloginWhileHitting" class="TestClass.LoginTestClass"/>
        <method signature="LoginTestClass.verifySuccessfullLogin()[pri:1, instance:TestClass.LoginTestClass@2de23121]" name="verifySuccessfullLogin" class="TestClass.LoginTestClass"/>
        <method signature="LoginTestClass.verifytheCurrentApplicationisloginWhileHitting()[pri:3, instance:TestClass.LoginTestClass@2de23121]" name="verifytheCurrentApplicationisloginWhileHitting" class="TestClass.LoginTestClass"/>
      </group> <!-- Group 1 -->
    </groups>
    <test started-at="2025-07-16T15:07:12 IST" name="Test2" finished-at="2025-07-16T15:07:14 IST" duration-ms="2203">
      <class name="TestClass.LoginTestClass">
        <test-method is-config="true" signature="createReport()[pri:0, instance:TestClass.LoginTestClass@2de23121]" started-at="2025-07-16T15:07:12 IST" name="createReport" finished-at="2025-07-16T15:07:12 IST" duration-ms="457" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createReport -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:TestClass.LoginTestClass@2de23121]" started-at="2025-07-16T15:07:12 IST" name="beforeMethod" finished-at="2025-07-16T15:07:12 IST" duration-ms="4" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Firefox]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[invalid browser  Firefox]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: invalid browser  Firefox
at BaseClass.BaseClass.beforeMethod(BaseClass.java:43)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifySuccessfullLogin()[pri:1, instance:TestClass.LoginTestClass@2de23121]" started-at="2025-07-16T15:07:12 IST" name="verifySuccessfullLogin" finished-at="2025-07-16T15:07:12 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[invalid browser  Firefox]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: invalid browser  Firefox
at BaseClass.BaseClass.beforeMethod(BaseClass.java:43)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySuccessfullLogin -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestClass.LoginTestClass@2de23121]" started-at="2025-07-16T15:07:12 IST" name="afterMethod" finished-at="2025-07-16T15:07:12 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:TestClass.LoginTestClass@2de23121]" started-at="2025-07-16T15:07:14 IST" name="beforeMethod" finished-at="2025-07-16T15:07:14 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfullLogin(java.lang.String,java.lang.String)[pri:2, instance:TestClass.LoginTestClass@2de23121]" started-at="2025-07-16T15:07:14 IST" name="verifyUnsuccessfullLogin" data-provider="unsuccessfullLogin" finished-at="2025-07-16T15:07:14 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[invalid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[invalid browser  Firefox]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: invalid browser  Firefox
at BaseClass.BaseClass.beforeMethod(BaseClass.java:43)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfullLogin -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestClass.LoginTestClass@2de23121]" started-at="2025-07-16T15:07:14 IST" name="afterMethod" finished-at="2025-07-16T15:07:14 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:TestClass.LoginTestClass@2de23121]" started-at="2025-07-16T15:07:14 IST" name="beforeMethod" finished-at="2025-07-16T15:07:14 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfullLogin(java.lang.String,java.lang.String)[pri:2, instance:TestClass.LoginTestClass@2de23121]" started-at="2025-07-16T15:07:14 IST" name="verifyUnsuccessfullLogin" data-provider="unsuccessfullLogin" finished-at="2025-07-16T15:07:14 IST" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[456324]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[invalid browser  Firefox]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: invalid browser  Firefox
at BaseClass.BaseClass.beforeMethod(BaseClass.java:43)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfullLogin -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestClass.LoginTestClass@2de23121]" started-at="2025-07-16T15:07:14 IST" name="afterMethod" finished-at="2025-07-16T15:07:14 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:TestClass.LoginTestClass@2de23121]" started-at="2025-07-16T15:07:14 IST" name="beforeMethod" finished-at="2025-07-16T15:07:14 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfullLogin(java.lang.String,java.lang.String)[pri:2, instance:TestClass.LoginTestClass@2de23121]" started-at="2025-07-16T15:07:14 IST" name="verifyUnsuccessfullLogin" data-provider="unsuccessfullLogin" finished-at="2025-07-16T15:07:14 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[invalid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[invalid]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[invalid browser  Firefox]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: invalid browser  Firefox
at BaseClass.BaseClass.beforeMethod(BaseClass.java:43)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfullLogin -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestClass.LoginTestClass@2de23121]" started-at="2025-07-16T15:07:14 IST" name="afterMethod" finished-at="2025-07-16T15:07:14 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:TestClass.LoginTestClass@2de23121]" started-at="2025-07-16T15:07:14 IST" name="beforeMethod" finished-at="2025-07-16T15:07:14 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifytheCurrentApplicationisloginWhileHitting()[pri:3, instance:TestClass.LoginTestClass@2de23121]" started-at="2025-07-16T15:07:14 IST" name="verifytheCurrentApplicationisloginWhileHitting" finished-at="2025-07-16T15:07:14 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[invalid browser  Firefox]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: invalid browser  Firefox
at BaseClass.BaseClass.beforeMethod(BaseClass.java:43)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifytheCurrentApplicationisloginWhileHitting -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestClass.LoginTestClass@2de23121]" started-at="2025-07-16T15:07:14 IST" name="afterMethod" finished-at="2025-07-16T15:07:14 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:TestClass.LoginTestClass@2de23121]" started-at="2025-07-16T15:07:14 IST" name="beforeMethod" finished-at="2025-07-16T15:07:14 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="varifyRemembermeisCheckedOrnot()[pri:4, instance:TestClass.LoginTestClass@2de23121]" started-at="2025-07-16T15:07:14 IST" name="varifyRemembermeisCheckedOrnot" finished-at="2025-07-16T15:07:14 IST" duration-ms="1" status="SKIP">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[invalid browser  Firefox]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: invalid browser  Firefox
at BaseClass.BaseClass.beforeMethod(BaseClass.java:43)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- varifyRemembermeisCheckedOrnot -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestClass.LoginTestClass@2de23121]" started-at="2025-07-16T15:07:14 IST" name="afterMethod" finished-at="2025-07-16T15:07:14 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:TestClass.LoginTestClass@2de23121]" started-at="2025-07-16T15:07:14 IST" name="beforeMethod" finished-at="2025-07-16T15:07:14 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyAttributOfUsernameField()[pri:5, instance:TestClass.LoginTestClass@2de23121]" started-at="2025-07-16T15:07:14 IST" name="verifyAttributOfUsernameField" finished-at="2025-07-16T15:07:14 IST" duration-ms="1" status="SKIP">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[invalid browser  Firefox]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: invalid browser  Firefox
at BaseClass.BaseClass.beforeMethod(BaseClass.java:43)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAttributOfUsernameField -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestClass.LoginTestClass@2de23121]" started-at="2025-07-16T15:07:14 IST" name="afterMethod" finished-at="2025-07-16T15:07:14 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestClass.LoginTestClass -->
    </test> <!-- Test2 -->
    <test started-at="2025-07-16T15:07:12 IST" name="Test1" finished-at="2025-07-16T15:07:43 IST" duration-ms="30533">
      <class name="TestClass.LoginTestClass">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:TestClass.LoginTestClass@662ac478]" started-at="2025-07-16T15:07:12 IST" name="beforeMethod" finished-at="2025-07-16T15:07:16 IST" duration-ms="4203" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifySuccessfullLogin()[pri:1, instance:TestClass.LoginTestClass@662ac478]" started-at="2025-07-16T15:07:16 IST" name="verifySuccessfullLogin" finished-at="2025-07-16T15:07:23 IST" duration-ms="6689" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySuccessfullLogin -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestClass.LoginTestClass@662ac478]" started-at="2025-07-16T15:07:23 IST" name="afterMethod" finished-at="2025-07-16T15:07:23 IST" duration-ms="392" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:TestClass.LoginTestClass@662ac478]" started-at="2025-07-16T15:07:24 IST" name="beforeMethod" finished-at="2025-07-16T15:07:26 IST" duration-ms="2772" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfullLogin(java.lang.String,java.lang.String)[pri:2, instance:TestClass.LoginTestClass@662ac478]" started-at="2025-07-16T15:07:26 IST" name="verifyUnsuccessfullLogin" data-provider="unsuccessfullLogin" finished-at="2025-07-16T15:07:27 IST" duration-ms="716" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[invalid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfullLogin -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestClass.LoginTestClass@662ac478]" started-at="2025-07-16T15:07:27 IST" name="afterMethod" finished-at="2025-07-16T15:07:27 IST" duration-ms="220" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:TestClass.LoginTestClass@662ac478]" started-at="2025-07-16T15:07:27 IST" name="beforeMethod" finished-at="2025-07-16T15:07:30 IST" duration-ms="2461" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfullLogin(java.lang.String,java.lang.String)[pri:2, instance:TestClass.LoginTestClass@662ac478]" started-at="2025-07-16T15:07:30 IST" name="verifyUnsuccessfullLogin" data-provider="unsuccessfullLogin" finished-at="2025-07-16T15:07:31 IST" duration-ms="749" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[456324]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfullLogin -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestClass.LoginTestClass@662ac478]" started-at="2025-07-16T15:07:31 IST" name="afterMethod" finished-at="2025-07-16T15:07:31 IST" duration-ms="228" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:TestClass.LoginTestClass@662ac478]" started-at="2025-07-16T15:07:31 IST" name="beforeMethod" finished-at="2025-07-16T15:07:33 IST" duration-ms="2545" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfullLogin(java.lang.String,java.lang.String)[pri:2, instance:TestClass.LoginTestClass@662ac478]" started-at="2025-07-16T15:07:33 IST" name="verifyUnsuccessfullLogin" data-provider="unsuccessfullLogin" finished-at="2025-07-16T15:07:34 IST" duration-ms="709" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[invalid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[invalid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfullLogin -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestClass.LoginTestClass@662ac478]" started-at="2025-07-16T15:07:34 IST" name="afterMethod" finished-at="2025-07-16T15:07:34 IST" duration-ms="301" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:TestClass.LoginTestClass@662ac478]" started-at="2025-07-16T15:07:34 IST" name="beforeMethod" finished-at="2025-07-16T15:07:37 IST" duration-ms="2436" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifytheCurrentApplicationisloginWhileHitting()[pri:3, instance:TestClass.LoginTestClass@662ac478]" started-at="2025-07-16T15:07:37 IST" name="verifytheCurrentApplicationisloginWhileHitting" finished-at="2025-07-16T15:07:37 IST" duration-ms="50" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifytheCurrentApplicationisloginWhileHitting -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestClass.LoginTestClass@662ac478]" started-at="2025-07-16T15:07:37 IST" name="afterMethod" finished-at="2025-07-16T15:07:37 IST" duration-ms="282" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:TestClass.LoginTestClass@662ac478]" started-at="2025-07-16T15:07:37 IST" name="beforeMethod" finished-at="2025-07-16T15:07:40 IST" duration-ms="2362" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="varifyRemembermeisCheckedOrnot()[pri:4, instance:TestClass.LoginTestClass@662ac478]" started-at="2025-07-16T15:07:40 IST" name="varifyRemembermeisCheckedOrnot" finished-at="2025-07-16T15:07:40 IST" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- varifyRemembermeisCheckedOrnot -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestClass.LoginTestClass@662ac478]" started-at="2025-07-16T15:07:40 IST" name="afterMethod" finished-at="2025-07-16T15:07:40 IST" duration-ms="193" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:TestClass.LoginTestClass@662ac478]" started-at="2025-07-16T15:07:40 IST" name="beforeMethod" finished-at="2025-07-16T15:07:42 IST" duration-ms="2534" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyAttributOfUsernameField()[pri:5, instance:TestClass.LoginTestClass@662ac478]" started-at="2025-07-16T15:07:42 IST" name="verifyAttributOfUsernameField" finished-at="2025-07-16T15:07:42 IST" duration-ms="66" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAttributOfUsernameField -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestClass.LoginTestClass@662ac478]" started-at="2025-07-16T15:07:42 IST" name="afterMethod" finished-at="2025-07-16T15:07:43 IST" duration-ms="203" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestClass.LoginTestClass -->
    </test> <!-- Test1 -->
  </suite> <!-- ParallelTestSuite -->
</testng-results>
